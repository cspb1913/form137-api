plugins {
        id 'java'
        id 'org.springframework.boot' version '3.5.3'
        id 'io.spring.dependency-management' version '1.1.7'
        id 'au.com.dius.pact' version '4.6.10'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
        implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.20.0' // ‚Üê embedded
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'au.com.dius.pact.provider:junit5spring:4.6.10'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('bootRunDev', org.springframework.boot.gradle.tasks.run.BootRun) {
    group = 'application'
    description = 'Run with the dev profile and embedded Mongo'
    args '--spring.profiles.active=dev'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'ph.edu.cspb.form137.Form137ApiApplication'
}


tasks.named('test') {
        useJUnitPlatform()
}

tasks.register('pactTest', Test) {
    group = 'verification'
    description = 'Runs Pact provider tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    include '**/pact/**'
}

tasks.register('pact') {
    group = 'verification'
    description = 'Alias for pactTest'
    dependsOn 'pactTest'
}
